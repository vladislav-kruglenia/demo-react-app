{"version":3,"sources":["components/common/TextareaStyle.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","addTextForm","item","messageContainer","message","dialogsContainer","dialogsItemsContainer","dialogsItems","messagesContainer","messagesWindowContainer","addMessageForm","DialogItem","props","react_default","a","createElement","className","s","react_router_dom","activeClassName","active","to","id","src","Hardi","alt","name","Message","maxLength10","maxLengthCreator","AddMessageForm","onSubmit","handleSubmit","concat","s2","Field","placeholder","component","Textarea","validate","required","s3","buttonStyle","reduxForm","form","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","messages","m","Dialogs_Message_Message","isAuth","Dialogs_AddMessageForm","formData","console","log","addMessageCollBack","newMessage","resetText","react_router","compose","withAuthRedirect","connect","state","auth","dispatch","onMessageChangeCollBack","newText","actionCreator","updateNewMessageText","text","addMessage","formName","reset"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,YAAA,yDCAlBF,EAAAC,QAAA,CAAkBE,KAAA,+CCAlBH,EAAAC,QAAA,CAAkBG,iBAAA,kCAAAC,QAAA,+CCAlBL,EAAAC,QAAA,CAAkBK,iBAAA,kCAAAC,sBAAA,uCAAAC,aAAA,8BAAAC,kBAAA,mCAAAC,wBAAA,yCAAAC,eAAA,kJCkBHC,EAbI,SAACC,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,MACdW,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,gBAAiBF,IAAEG,OAAQC,GAAI,YAAcT,EAAMU,IACxDT,EAAAC,EAAAC,cAAA,OAAKQ,IAAKC,IAAOC,IAAI,KACpBb,EAAMc,0BCARC,EARC,SAACf,GACb,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEd,kBACrBU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACbQ,EAAMR,yGCMbwB,EAAcC,YAAiB,IAGjCC,EAAiB,SAAClB,GAClB,OAAOC,EAAAC,EAAAC,cAAA,QAAMgB,SAAUnB,EAAMoB,aAAchB,UAAS,GAAAiB,OAAKC,IAAGjC,YAAR,KAAAgC,OAAuBhB,IAAEP,iBACzEG,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,YAAa,cACbC,UAAWC,IACXZ,KAAM,aACNa,SAAU,CAACC,IAAUZ,KAEzBf,EAAAC,EAAAC,cAAA,UAAQC,UAAWyB,IAAGC,aAAtB,UAIRZ,EAAiBa,YAAU,CAACC,KAAM,iBAAjBD,CAAmCb,GAEpD,IAwCee,EAxCC,SAACjC,GAMb,IAUIkC,EAAkBlC,EAAMmC,YAAYC,QAAQC,IAAI,SAAAC,GAAC,OAAIrC,EAAAC,EAAAC,cAACoC,EAAD,CAAYC,IAAKF,EAAE5B,GAAII,KAAMwB,EAAExB,KAAMJ,GAAI4B,EAAE5B,OAChG+B,EAAmBzC,EAAMmC,YAAYO,SAASL,IAAI,SAAAM,GAAC,OAAI1C,EAAAC,EAAAC,cAACyC,EAAD,CAASJ,IAAKG,EAAEnD,QAASA,QAASmD,EAAEnD,YAE/F,OAAKQ,EAAM6C,OAGP5C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,kBACdQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,uBACdO,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,cACbuC,IAGTjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAET,mBACdK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAER,yBACb4C,GAELxC,EAAAC,EAAAC,cAAC2C,EAAD,CAAgB3B,SA1BR,SAAC4B,GACjBC,QAAQC,IAAIF,GACZ/C,EAAMkD,mBAAmBH,EAASI,YAClCnD,EAAMoD,UAAU,sBAUMnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAU5C,GAAI,2CCvB7B6C,sBACXC,IACAC,YApBkB,SAACC,GACnB,MAAO,CACHtB,YAAasB,EAAMtB,YACnBU,OAAQY,EAAMC,KAAKb,SAGF,SAACc,GACtB,MAAM,CACFC,wBAAyB,SAACC,GACtBF,EAASG,IAAcC,qBAAqBF,KAEhDX,mBAAoB,SAACc,GACjBL,EAASG,IAAcG,WAAWD,KAEtCZ,UAAU,SAACc,GAAD,OAAcP,EAASQ,YAAMD,QAIhCZ,CAGbrB","file":"static/js/4.7a49dcd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTextForm\":\"TextareaStyle_addTextForm__3AM8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__1ADqN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer__2ucKG\",\"message\":\"Message_message__14B88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__1x156\",\"dialogsItemsContainer\":\"Dialogs_dialogsItemsContainer__3Wf0f\",\"dialogsItems\":\"Dialogs_dialogsItems__1RXUX\",\"messagesContainer\":\"Dialogs_messagesContainer__2Fb1O\",\"messagesWindowContainer\":\"Dialogs_messagesWindowContainer__r1tYu\",\"addMessageForm\":\"Dialogs_addMessageForm__3sOtU\"};","import React from \"react\";\r\nimport s from \"./DialogItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Hardi from \"../../../img/User.jpg\"\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to={\"/dialogs/\" + props.id}>\r\n                <img src={Hardi} alt=\"\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.messageContainer}>\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport s2 from \"../../components/common/TextareaStyle.module.css\"\r\nimport s3 from \"../../components/common/Button.module.css\"\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nlet AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={`${s2.addTextForm} ${s.addMessageForm}`}>\r\n        <Field\r\n            placeholder={\"Add message\"}\r\n            component={Textarea}\r\n            name={\"newMessage\"}\r\n            validate={[required, maxLength10]}\r\n        />\r\n        <button className={s3.buttonStyle}>Send</button>\r\n    </form>;\r\n}\r\n\r\nAddMessageForm = reduxForm({form: \"addNewMessage\"})(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    /*let onMessageChange = () => {\r\n        props.onMessageChangeCollBack(newMessageElement.current.value)\r\n    }*/\r\n\r\n    let addNewMessage = (formData) => {\r\n        console.log(formData)\r\n        props.addMessageCollBack(formData.newMessage)\r\n        props.resetText(\"addNewMessage\")\r\n    }\r\n\r\n    /*let addMessage = () => {\r\n        props.addMessageCollBack()\r\n    }*/\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message key={m.message} message={m.message}/>)\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogsContainer}>\r\n            <div className={s.dialogsItemsContainer}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n            <div className={s.messagesContainer}>\r\n                <div className={s.messagesWindowContainer}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import {actionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HighOrderComponents/widthAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {reset} from \"redux-form\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onMessageChangeCollBack: (newText) =>{\r\n            dispatch(actionCreator.updateNewMessageText(newText))\r\n        },\r\n        addMessageCollBack: (text) =>{\r\n            dispatch(actionCreator.addMessage(text))\r\n        },\r\n        resetText:(formName) => dispatch(reset(formName))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(Dialogs)"],"sourceRoot":""}