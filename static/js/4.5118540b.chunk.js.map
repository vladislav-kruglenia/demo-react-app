{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","dialog","active","messages","message","DialogItem","props","react_default","a","createElement","className","s","react_router_dom","to","id","name","Message","maxLength10","maxLengthCreator","AddMessageForm","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","reduxForm","form","Dialogs","dialogsElements","dialogsPage","map","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","isAuth","Dialogs_AddMessageForm","formData","console","log","addMessageCollBack","newMessage","react_router","compose","withAuthRedirect","connect","state","auth","dispatch","onMessageChangeCollBack","newText","actionCreator","updateNewMessageText","text","addMessage"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,0HCcHC,EAVI,SAACC,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,OAAS,IAAMU,IAAET,QAC/BK,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAI,YAAcP,EAAMQ,IAAKR,EAAMS,QCCzCC,EANC,SAACV,GACb,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEP,SACpBE,EAAMF,mDCKTa,EAAeC,YAAiB,IAGlCC,EAAiB,SAACb,GAClB,OAAOC,EAAAC,EAAAC,cAAA,QAAMW,SAAUd,EAAMe,cACzBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACIC,YAAa,cACbC,UAAWC,IACXV,KAAM,aACNW,SAAU,CAACC,IAAUV,KAEzBV,EAAAC,EAAAC,cAAA,wBAIRU,EAAiBS,YAAU,CAACC,KAAM,iBAAjBD,CAAmCT,GAEpD,IAmCeW,EAnCC,SAACxB,GAMb,IASIyB,EAAkBzB,EAAM0B,YAAYjC,QAAQkC,IAAI,SAAAC,GAAC,OAAI3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAYpB,KAAMmB,EAAEnB,KAAMD,GAAIoB,EAAEpB,OACrFsB,EAAmB9B,EAAM0B,YAAY7B,SAAS8B,IAAI,SAAAI,GAAC,OAAI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAASlC,QAASiC,EAAEjC,YAE/E,OAAKE,EAAMiC,OAGPhC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,SACdQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,cACb+B,GAELxB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAER,UACbiC,EACD7B,EAAAC,EAAAC,cAAC+B,EAAD,CAAgBpB,SArBR,SAACqB,GACjBC,QAAQC,IAAIF,GACZnC,EAAMsC,mBAAmBH,EAASI,iBAUZtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUjC,GAAI,mCCtB7BkC,sBACXC,IACAC,YAnBkB,SAACC,GACnB,MAAO,CACHlB,YAAakB,EAAMlB,YACnBO,OAAQW,EAAMC,KAAKZ,SAGF,SAACa,GACtB,MAAM,CACFC,wBAAyB,SAACC,GACtBF,EAASG,IAAcC,qBAAqBF,KAEhDV,mBAAoB,SAACa,GACjBL,EAASG,IAAcG,WAAWD,QAK/BV,CAGbjB","file":"static/js/4.5118540b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__LvM1V\",\"dialogsItems\":\"Dialogs_dialogsItems__1RXUX\",\"dialog\":\"Dialogs_dialog__3ixhj\",\"active\":\"Dialogs_active__2h3xC\",\"messages\":\"Dialogs_messages__1R1h9\",\"message\":\"Dialogs_message__2Fq0d\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n    </div>\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 =  maxLengthCreator(10)\r\n\r\n\r\nlet AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field\r\n            placeholder={\"Add message\"}\r\n            component={Textarea}\r\n            name={\"newMessage\"}\r\n            validate={[required, maxLength10]}\r\n        />\r\n        <button>Send</button>\r\n    </form>;\r\n}\r\n\r\nAddMessageForm = reduxForm({form: \"addNewMessage\"})(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    /*let onMessageChange = () => {\r\n        props.onMessageChangeCollBack(newMessageElement.current.value)\r\n    }*/\r\n\r\n    let addNewMessage = (formData) =>{\r\n        console.log(formData)\r\n        props.addMessageCollBack(formData.newMessage)\r\n    }\r\n\r\n    /*let addMessage = () => {\r\n        props.addMessageCollBack()\r\n    }*/\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message}/>)\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import {actionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HighOrderComponents/widthAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onMessageChangeCollBack: (newText) =>{\r\n            dispatch(actionCreator.updateNewMessageText(newText))\r\n        },\r\n        addMessageCollBack: (text) =>{\r\n            dispatch(actionCreator.addMessage(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(Dialogs)"],"sourceRoot":""}