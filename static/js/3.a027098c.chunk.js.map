{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/TextareaStyle.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/ProfileInfo/ProfileImg/ProfileImg.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWidthHooks.jsx","components/Profile/ProfileInfo/Contact/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileImg/ProfileImg.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","profileInfoContainer","descriptionBlock","contactsDataContainer","contact","addTextForm","profileStatusContainer","status","imgContainer","postContainer","postTop","postText","myPostsContainer","postsBlock","profileMain","ProfileStatusWidthHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","deactivateEditMode","updateStatus","isOwner","react_default","a","createElement","className","s","nameUser","onClick","onBlur","onChange","e","currentTarget","value","autoFocus","s2","buttonStyle","Contact","contactName","contactValue","ProfileDataFormContainer","reduxForm","form","_ref","handleSubmit","exitToEditPage","profile","error","Fragment","onSubmit","createField","Input","required","type","Textarea","keys","contacts","map","p","key","style","formSummaryError","ProfileImg","style2","src","photos","large","Hardi","alt","style1","logo","target","files","length","savePhoto","ProfileData","lookingForAJob","lookingForAJobDescription","ProfileInfo_Contact_Contact","goToEditPage","ProfileInfo","Preloader","ProfileImg_ProfileImg","ProfileStatus_ProfileStatusWidthHooks","fullName","ProfileData_ProfileDataForm","formData","console","log","saveProfileData","then","initialValues","ProfileInfo_ProfileData","Post","photo","name","message","AddPostForm","s3","Field","placeholder","component","validate","MyPosts","React","memo","profilePage","postsElements","posts","slice","reverse","My_posts_Post_Post","id","likeCounts","small","MyPosts_AddPostForm","objectSpread","addPostCollback","resetText","MyPostsContainer","connect","state","dispatch","text","actionCreator","addPost","formName","reset","Profile","Profile_ProfileInfo_ProfileInfo","My_posts_MyPostsContainer","ProfileContainer","numberID","this","match","params","userId","authorizedUserId","history","push","getProfileInfo","getUserStatus","updateUserParams","prevProps","prevState","snapshot","components_Profile_Profile","assign","updateUserStatus","Component","dispatchObject","getProfileInfoThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","savePhotoThunkCreator","saveProfileDataThunkCreator","compose","isAuth","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.a027098c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__3eP6u\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3TW3C\",\"contactsDataContainer\":\"ProfileInfo_contactsDataContainer__1MP1x\",\"contact\":\"ProfileInfo_contact__1jxr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTextForm\":\"TextareaStyle_addTextForm__3AM8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatusContainer\":\"ProfileStatus_profileStatusContainer__gIIhi\",\"status\":\"ProfileStatus_status__1xyAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgContainer\":\"ProfileImg_imgContainer__2oXUw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"Post_postContainer__1fDxu\",\"postTop\":\"Post_postTop__2bjZo\",\"postText\":\"Post_postText__3-SaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsContainer\":\"MyPosts_myPostsContainer__27hVR\",\"postsBlock\":\"MyPosts_postsBlock__1KdIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMain\":\"Profile_profileMain__2_m40\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileStatus.module.css'\r\nimport s2 from './../../../common/Button.module.css'\r\n\r\nconst ProfileStatusWidthHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    if(!props.isOwner){\r\n        return <div className={s.profileStatusContainer}>\r\n            <div>\r\n                <h2>{props.nameUser}</h2>\r\n            </div>\r\n            <div className={s.status}>\r\n                {props.status || \"Нет статуса, сори\"}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.profileStatusContainer}>\r\n            <div>\r\n                <h2>{props.nameUser}</h2>\r\n            </div>\r\n            {!editMode &&\r\n            <div onClick={activateEditMode} className={s.status}>\r\n                {props.status || \"Нет статуса, сори\"}\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                    autoFocus={true}\r\n                />\r\n                <button className={s2.buttonStyle} onClick={deactivateEditMode}>Save</button>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWidthHooks","import React from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\n\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <div>{props.contactName}: </div>\r\n            <div>{props.contactValue}</div>{/*<br/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../../utils/validators/validators\";\r\nimport style from \"../../../LoginPage/LoginPage.module.css\";\r\nimport s2 from \"../../../common/Button.module.css\";\r\nimport s from \"../ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit,exitToEditPage,profile,error}) => {\r\n    return (\r\n        <>\r\n            <button className={s2.buttonStyle} onClick={exitToEditPage}>Exit</button>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={s.contact}>\r\n                    <div><b>My name: </b></div>\r\n                    <div>{createField(\"My name\", Input, \"fullName\", [required])}</div>\r\n                    {/*{createField('My name', Input, \"fullName\", {},{},\"\")}*/}\r\n                </div>\r\n                <div className={s.contact}>\r\n                    <div><b>Looking for a job: </b></div>\r\n                    <div>{createField(\"\", Input, \"lookingForAJob\", null, {type: \"checkbox\"})}</div>\r\n                </div>\r\n                <div className={s.contact}>\r\n                    <div><b>Description:</b></div>\r\n                    <div>{createField(\"About me\", Textarea, \"lookingForAJobDescription\", [required])}</div>\r\n                </div>\r\n                <div className={s.contact}>\r\n                    <div><b>About me:</b></div>\r\n                    <div>{createField(\"About me\", Textarea, \"aboutMe\", [required])}</div>\r\n                </div>\r\n                 <div>\r\n                     <b>My contacts: </b>\r\n                     {Object.keys(profile.contacts).map(p => {\r\n                    return <div key={p} className={s.contact}>\r\n                        <div><i>{p}</i></div>\r\n                        <div>{createField(p, Input, \"contacts.\" + p)}</div>\r\n                    </div>\r\n                })}\r\n                 </div>\r\n                {\r\n                    error && <div className={style.formSummaryError}>\r\n                        {error}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <button className={s2.buttonStyle}>Save</button>\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nconst ProfileDataFormContainer = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormContainer","import Hardi from \"../../../../img/User.jpg\";\r\nimport style1 from \"../ProfileInfo.module.css\";\r\nimport style2 from \"./ProfileImg.module.css\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const ProfileImg = (props) => {\r\n    let onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return <div className={style2.imgContainer}>\r\n        <img src={props.profile.photos.large || Hardi} alt=\"\" className={style1.logo}/>\r\n        {props.isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n    </div>\r\n}","import React, {useState} from 'react';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWidthHooks from \"./ProfileStatus/ProfileStatusWidthHooks\";\r\nimport Contact from \"./Contact/Contact\";\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\nimport {ProfileImg} from \"./ProfileImg/ProfileImg\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport s2 from \"../../common/Button.module.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    let [editMode, setEditMode] = useState(false)\r\n    let formDataEdit = (formData) => {\r\n        console.log(formData)\r\n        props.saveProfileData(formData)\r\n            .then(() => {\r\n                setEditMode(false)\r\n            })\r\n        //setEditMode(false)\r\n    };\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            <ProfileImg {...props}/>\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileStatusWidthHooks\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    nameUser={props.profile.fullName}\r\n                    isOwner={props.isOwner}\r\n                />\r\n                {editMode\r\n                    ? <ProfileDataForm\r\n                        onSubmit={formDataEdit}\r\n                        initialValues={props.profile}\r\n                        profile={props.profile}\r\n                        exitToEditPage={() => {\r\n                            setEditMode(false)\r\n                        }}/>\r\n                    : <ProfileData\r\n                        isOwner={props.isOwner}\r\n                        profile={props.profile} goToEditPage={() => {\r\n                        setEditMode(true)\r\n                    }}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div className={s.contactsDataContainer}>\r\n            {/*<div className={s.contact}>\r\n                <div><b>My name: </b></div>\r\n                <div>{props.profile.fullName}</div>\r\n            </div>*/}\r\n            <div className={s.contact}>\r\n                <div><b>Looking for a job: </b></div>\r\n                <div>\r\n                    {props.profile.lookingForAJob\r\n                        ? \"yes\"\r\n                        : \"no\"}\r\n                </div>\r\n            </div>\r\n            <div className={s.contact}>\r\n                <div><b>My skills: </b></div>\r\n                <div>\r\n                    {props.profile.lookingForAJobDescription}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <b>My contacts: </b><br/>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactName={key} contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n            {props.isOwner && <button onClick={props.goToEditPage} className={s2.buttonStyle}>Edit</button>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from \"./Post.module.css\"\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n        <div className={s.postContainer} >\r\n            <div className={s.postTop}>\r\n                <div><img src={props.photo} alt={\"\"}/></div>\r\n                <div>{props.name}</div>\r\n            </div>\r\n            <div className={s.postText}>{props.message}</div>\r\n\r\n\r\n            {/*<div>\r\n                <span>like </span>\r\n                {props.likeCounts}\r\n            </div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport s2 from \"../../common/Button.module.css\";\r\nimport s3 from \"../../common/TextareaStyle.module.css\"\r\n\r\n\r\n//import {maxLengthCreator} from \"../../../utils/validators/validators\";\r\n//import Preloader from \"../../common/Preloader/Preloader\";\r\n//const maxLength10 = maxLengthCreator(10)\r\n\r\nlet AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={s3.addTextForm}>\r\n        <div>\r\n            <Field\r\n                placeholder={\"Post message\"}\r\n                component={Textarea}\r\n                name={\"newPost\"}\r\n                validate={[]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className={s2.buttonStyle} onClick={props.onClick}>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nAddPostForm = reduxForm({form: \"addNewPost\"})(AddPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    if (!props.profilePage.profile) {\r\n        return <></>\r\n    }\r\n    let addNewPost = (formData) => {\r\n        formData = {...formData, id: props.profilePage.posts.length + 1}\r\n        console.log(formData)\r\n        props.addPostCollback(formData)\r\n        props.resetText('addNewPost')\r\n    }\r\n\r\n    let postsElements = props.profilePage.posts.slice(0).reverse().map(p => (\r\n        <Post\r\n            key={p.id}\r\n            message={p.message}\r\n            likeCounts={p.likeCounts}\r\n            name={props.profilePage.profile.fullName}\r\n            photo={props.profilePage.profile.photos.small}\r\n        />))\r\n\r\n    return (\r\n        <div className={s.myPostsContainer}>\r\n            <div className={s.postsBlock}>\r\n                {/*<h3>My posts</h3>*/}\r\n                <AddPostForm onSubmit={addNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts","import {actionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport { reset} from \"redux-form\";\r\n\r\n// commit!!!!!!!!!!!\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profilePage: state.profilePage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPostCollback: (text) => {\r\n            dispatch(actionCreator.addPost(text))\r\n        },\r\n        resetText:(formName) => dispatch(reset(formName))\r\n    }\r\n\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\"\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.profileMain}>\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfileData={props.saveProfileData}\r\n            />\r\n            <MyPostsContainer\r\n                isOwner={props.isOwner}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfileInfoThunkCreator,\r\n    getStatusThunkCreator, savePhotoThunkCreator, saveProfileDataThunkCreator,\r\n    updateStatusThunkCreator\r\n} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HighOrderComponents/widthAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    updateUserParams(){\r\n        let numberID = this.props.match.params.userId\r\n        if(!numberID) {\r\n            numberID = this.props.authorizedUserId\r\n            if(!numberID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        } //8845\r\n        this.props.getProfileInfo(numberID)\r\n        this.props.getUserStatus(numberID)\r\n    }\r\n    componentDidMount() {\r\n        this.updateUserParams()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.updateUserParams()\r\n        }\r\n    }\r\n\r\n    render() {\r\n         return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateUserStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfileData={this.props.saveProfileData}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id\r\n    }\r\n}\r\nlet dispatchObject ={\r\n    getProfileInfo: getProfileInfoThunkCreator,\r\n    getUserStatus: getStatusThunkCreator,\r\n    updateUserStatus: updateStatusThunkCreator,\r\n    savePhoto: savePhotoThunkCreator,\r\n    saveProfileData: saveProfileDataThunkCreator\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, dispatchObject),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}