{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWidthHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","logo","postsBlock","posts","item","ProfileStatusWidthHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","ProfileInfo","profile","className","s","photos","small","src","large","alt","Hardi","ProfileStatus_ProfileStatusWidthHooks","Preloader","Post","message","likeCounts","maxLength10","maxLengthCreator","AddPostForm","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","onClick","reduxForm","form","MyPosts","React","memo","postsElements","profilePage","map","p","My_posts_Post_Post","MyPosts_AddPostForm","formData","console","log","addPostCollback","newPost","MyPostsContainer","connect","state","dispatch","text","actionCreator","addPost","Profile","Profile_ProfileInfo_ProfileInfo","My_posts_MyPostsContainer","store","ProfileContainer","numberID","this","match","params","userId","authorizedUserId","history","push","getProfileInfo","getUserStatus","components_Profile_Profile","assign","updateUserStatus","Component","dispatchObject","getProfileInfoThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","compose","isAuth","auth","id","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.bfc025e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3TW3C\",\"logo\":\"ProfileInfo_logo__E5hce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1KdIR\",\"posts\":\"MyPosts_posts__yiaia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__28k4t\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWidthHooks = (props) => {\r\n    let [editMode,setEditMode] = useState(false)\r\n    let [status,setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    let activateEditMode = () =>{\r\n        setEditMode(true)\r\n    }\r\n    let deactivateEditMode = () =>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"Нет статуса, сори\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                    autoFocus={true}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWidthHooks","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Hardi from \"./../../../img/User.jpg\"\r\nimport ProfileStatusWidthHooks from \"./ProfileStatus/ProfileStatusWidthHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                {!props.profile.photos.small\r\n                    ?<img src={Hardi} alt=\"\" className={s.logo}/>\r\n                    :<img src={props.profile.photos.large} alt=\"\"/>}\r\n                 <ProfileStatusWidthHooks\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n                 />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from \"./Post.module.css\"\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n        <div className={s.item} >\r\n            <img src=\"https://f4.bcbits.com/img/0011837834_50.jpg\" alt={\"\"}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like </span>\r\n                {props.likeCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\nconst maxLength10 =  maxLengthCreator(10)\r\n\r\nlet AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field\r\n                placeholder={\"Post message\"}\r\n                component={Textarea}\r\n                name={\"newPost\"}\r\n                validate={[required, maxLength10]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button onClick={props.onClick}>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nAddPostForm = reduxForm({form: \"addNewPost\"})(AddPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let addNewPost = (formData) =>{\r\n        console.log(formData)\r\n        props.addPostCollback(formData.newPost)\r\n    }\r\n\r\n    let postsElements = props.profilePage.posts.map(p => <Post message={p.message} likeCounts={p.likeCounts}/>)\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts","import {actionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// commit!!!!!!!!!!!\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profilePage: state.profilePage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPostCollback: (text) => {\r\n            dispatch(actionCreator.addPost(text))\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfileInfoThunkCreator,\r\n    getStatusThunkCreator,\r\n    updateStatusThunkCreator\r\n} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HighOrderComponents/widthAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let numberID = this.props.match.params.userId\r\n        if(!numberID) {\r\n            numberID = this.props.authorizedUserId\r\n            if(!numberID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        } //8845}\r\n        this.props.getProfileInfo(numberID)\r\n        this.props.getUserStatus(numberID)\r\n    }\r\n\r\n    render() {\r\n         return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateUserStatus}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id\r\n    }\r\n}\r\nlet dispatchObject ={\r\n    getProfileInfo: getProfileInfoThunkCreator,\r\n    getUserStatus: getStatusThunkCreator,\r\n    updateUserStatus: updateStatusThunkCreator\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, dispatchObject),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}